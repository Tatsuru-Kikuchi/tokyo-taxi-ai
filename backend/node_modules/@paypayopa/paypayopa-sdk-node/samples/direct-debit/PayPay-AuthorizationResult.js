'use strict';

const PAYPAY = require('../..');

const API_KEY = 'm_179353170152349696_JeNq';
const API_SECRET = '0WnAQrhWEKqmwUUEDFFhXLTBYF83d6gCNE6mAatD';

/**
 * Configure a valid authorization
 * @param {String} clientId     API_KEY for using SDK
 * @param {String} clientSecret API_SECRET for using SDK
 */
try {
  PAYPAY.Configure({
    clientId: API_KEY,
    clientSecret: API_SECRET,
  });
} catch (err) {
  console.log(err);
}

/**
 * Check user wallet balance
 * Check if user has enough balance to make a payment
 *
 * @callback                    Callback function to handle result
 * @returns {Object}            Returns result containing STATUS and BODY
 * @param {Array} inputParams   Array of userAuthorizationId, amount, currency, productType
 */
try {
  let apiKey = 'm_179353170152349696_JeNq';
  let jwtToken = 'YYQEOyULlWjrrzPFpqFPzrrjWlLUyOEQYY';

  PAYPAY.AuthorizationResult(Array(apiKey, jwtToken), (result) => {
    console.log(result);
  });
} catch (err) {
  console.log(err);
}
